(window.webpackJsonp=window.webpackJsonp||[]).push([[626],{1061:function(s,a,t){"use strict";t.r(a);var n=t(0),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"jsonschema"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jsonschema"}},[s._v("#")]),s._v(" JsonSchema "),t("Badge",{attrs:{text:"Class",type:"class"}})],1),s._v(" "),t("section",{staticClass:"symbol-info"},[t("table",{staticClass:"is-full-width"},[t("tbody",[t("tr",[t("th",[s._v("Module")]),t("td",[t("div",{staticClass:"lang-typescript"},[t("span",{staticClass:"token keyword"},[s._v("import")]),s._v(" { JsonSchema } "),t("span",{staticClass:"token keyword"},[s._v("from")]),s._v(" "),t("span",{staticClass:"token string"},[s._v('"@tsed/schema"')])])])]),t("tr",[t("th",[s._v("Source")]),t("td",[t("a",{attrs:{href:"https://github.com/TypedProject/tsed/blob/v6.6.1/packages/schema/src/domain/JsonSchema.ts#L0-L0"}},[s._v("/packages/schema/src/domain/JsonSchema.ts")])])])])])]),s._v(" "),t("h2",{attrs:{id:"overview"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[s._v("#")]),s._v(" Overview")]),s._v(" "),t("div",{staticClass:"language-typescript"},[t("pre",{pre:!0,attrs:{class:"language-typescript"}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" JsonSchema "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" Map<"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("any")]),s._v("> "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" NestedGenerics "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("readonly")]),s._v(" $hooks"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("a",{pre:!0,attrs:{href:"/api/core/class/Hooks.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("Hooks")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("readonly")]),s._v(" $required"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Set<"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")]),s._v(">"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("div",{pre:!0,attrs:{class:"language- extra-class"}},[t("pre",[t("code",[s._v('<span class="token keyword">constructor</span><span class="token punctuation">(</span>obj?<span class="token punctuation">:</span> JsonSchema | Partial&lt;<a href="/api/schema/domain/JsonSchemaObject.html"><span class="token">JsonSchemaObject</span></a>&gt;<span class="token punctuation">)</span><span class="token punctuation">;</span>\nget <span class="token function">alias</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> AliasMap<span class="token punctuation">;</span>\nget <span class="token function">nestedGenerics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\nset <span class="token function">nestedGenerics</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token keyword">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nget <span class="token function">genericLabels</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\nset <span class="token function">genericLabels</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nget <span class="token function">isClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">boolean</span><span class="token punctuation">;</span>\n/**\n * Current schema is a collection\n */\nget <span class="token function">isCollection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">boolean</span><span class="token punctuation">;</span>\n/**\n * Current schema is a generic\n */\nget <span class="token function">isGeneric</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">boolean</span><span class="token punctuation">;</span>\n/**\n * Current schema has generics items\n */\nget <span class="token function">hasGenerics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">boolean</span><span class="token punctuation">;</span>\nget <span class="token function">genericType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">;</span>\nget <span class="token keyword">class</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">any</span><span class="token punctuation">;</span>\n<span class="token keyword">static</span> <span class="token keyword">from</span><span class="token punctuation">(</span>obj?<span class="token punctuation">:</span> Partial&lt;<a href="/api/schema/domain/JsonSchemaObject.html"><span class="token">JsonSchemaObject</span></a>&gt;<span class="token punctuation">)</span><span class="token punctuation">:</span> JsonSchema<span class="token punctuation">;</span>\n<span class="token function">itemSchema</span><span class="token punctuation">(</span>obj?<span class="token punctuation">:</span> <a href="/api/schema/domain/JsonSchemaObject.html"><span class="token">JsonSchemaObject</span></a> | JsonSchema | <span class="token keyword">any</span><span class="token punctuation">)</span><span class="token punctuation">:</span> JsonSchema<span class="token punctuation">;</span>\n<span class="token function">getAliasOf</span><span class="token punctuation">(</span>property<span class="token punctuation">:</span> AliasType<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">string</span> | <span class="token keyword">number</span> | symbol | undefined<span class="token punctuation">;</span>\n<span class="token function">addAlias</span><span class="token punctuation">(</span>property<span class="token punctuation">:</span> AliasType<span class="token punctuation">,</span> alias<span class="token punctuation">:</span> AliasType<span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n<span class="token function">removeAlias</span><span class="token punctuation">(</span>property<span class="token punctuation">:</span> AliasType<span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n$<span class="token function">id</span><span class="token punctuation">(</span>$id<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n$<span class="token function">ref</span><span class="token punctuation">(</span>$ref<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n$<span class="token function">schema</span><span class="token punctuation">(</span>$schema<span class="token punctuation">:</span> JSONSchema6Version<span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n<span class="token function">name</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n<span class="token function">ignore</span><span class="token punctuation">(</span>cb<span class="token punctuation">:</span> <span class="token keyword">boolean</span> | <a href="/api/schema/interfaces/IgnoreCallback.html"><span class="token">IgnoreCallback</span></a><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * This keyword can be used to supply a default JSON value associated with a particular schema.\n * It is RECOMMENDED that a default value be valid against the associated schema.\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-7.3\n */\n<span class="token function">default</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> JSONSchema6Type<span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * More readible form of a one-element "<span class="token keyword">enum</span>"\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.24\n */\n<span class="token keyword">const</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> JSONSchema6Type<span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * This attribute is a <span class="token keyword">string</span> that provides a full description of the of purpose the instance property.\n *\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-7.2\n */\n<span class="token function">description</span><span class="token punctuation">(</span>description<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * This keyword determines how child instances validate for arrays<span class="token punctuation">,</span> and does not directly validate the immediate instance itself.\n * If "items" is an array of schemas<span class="token punctuation">,</span> validation succeeds if every instance element\n * at a position greater than the size of "items" validates against "additionalItems".\n * Otherwise<span class="token punctuation">,</span> "additionalItems" MUST be ignored<span class="token punctuation">,</span> <span class="token keyword">as</span> the "items" schema\n * <span class="token punctuation">(</span>possibly the default value of an empty schema<span class="token punctuation">)</span> is applied to all elements.\n * Omitting this keyword has the same behavior <span class="token keyword">as</span> an empty schema.\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.10\n */\n<span class="token function">additionalItems</span><span class="token punctuation">(</span>additionalItems<span class="token punctuation">:</span> <span class="token keyword">boolean</span> | <a href="/api/schema/domain/JsonSchemaObject.html"><span class="token">JsonSchemaObject</span></a><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * An array instance is valid against "contains" if at least one of its elements is valid against the given schema.\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.14\n */\n<span class="token function">contains</span><span class="token punctuation">(</span>contains<span class="token punctuation">:</span> JSONSchema6Definition<span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * Array of examples with no validation effect the value of "default" is usable <span class="token keyword">as</span> an example without repeating it under this keyword\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-7.4\n */\n<span class="token function">examples</span><span class="token punctuation">(</span>examples<span class="token punctuation">:</span> JSONSchema6Type<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * This keyword determines how child instances validate for arrays<span class="token punctuation">,</span> and does not directly validate the immediate instance itself.\n * Omitting this keyword has the same behavior <span class="token keyword">as</span> an empty schema.\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.9\n */\n<span class="token function">items</span><span class="token punctuation">(</span>items<span class="token punctuation">:</span> JsonSchema | <a href="/api/schema/domain/JsonSchemaObject.html"><span class="token">JsonSchemaObject</span></a> | <span class="token punctuation">(</span><a href="/api/schema/domain/JsonSchemaObject.html"><span class="token">JsonSchemaObject</span></a> | JsonSchema<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * Must be a non-negative integer.\n * An array instance is valid against "maxItems" if its size is less than<span class="token punctuation">,</span> or equal to<span class="token punctuation">,</span> the value of this keyword.\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.11\n */\n<span class="token function">maxItems</span><span class="token punctuation">(</span>maxItems<span class="token punctuation">:</span> <span class="token keyword">number</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * Must be a non-negative integer.\n * An array instance is valid against "maxItems" if its size is greater than<span class="token punctuation">,</span> or equal to<span class="token punctuation">,</span> the value of this keyword.\n * Omitting this keyword has the same behavior <span class="token keyword">as</span> a value of 0.\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.12\n */\n<span class="token function">minItems</span><span class="token punctuation">(</span>minItems<span class="token punctuation">:</span> <span class="token keyword">number</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * If this keyword has <span class="token keyword">boolean</span> value false<span class="token punctuation">,</span> the instance validates successfully.\n * If it has <span class="token keyword">boolean</span> value true<span class="token punctuation">,</span> the instance validates successfully if all of its elements are unique.\n * Omitting this keyword has the same behavior <span class="token keyword">as</span> a value of false.\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.13\n */\n<span class="token function">uniqueItems</span><span class="token punctuation">(</span>uniqueItems<span class="token punctuation">:</span> <span class="token keyword">boolean</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * Must be a non-negative integer.\n * An object instance is valid against "maxProperties" if its <span class="token keyword">number</span> of properties is less than<span class="token punctuation">,</span> or equal to<span class="token punctuation">,</span> the value of this keyword.\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.15\n */\n<span class="token function">maxProperties</span><span class="token punctuation">(</span>maxProperties<span class="token punctuation">:</span> <span class="token keyword">number</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * Must be a non-negative integer.\n * An object instance is valid against "maxProperties" if its <span class="token keyword">number</span> of properties is greater than<span class="token punctuation">,</span>\n * or equal to<span class="token punctuation">,</span> the value of this keyword.\n * Omitting this keyword has the same behavior <span class="token keyword">as</span> a value of 0.\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.16\n */\n<span class="token function">minProperties</span><span class="token punctuation">(</span>minProperties<span class="token punctuation">:</span> <span class="token keyword">number</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * Elements of this array must be unique.\n * An object instance is valid against this keyword if every item in the array is the name of a property in the instance.\n * Omitting this keyword has the same behavior <span class="token keyword">as</span> an empty array.\n *\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.17\n */\n<span class="token function">required</span><span class="token punctuation">(</span>required<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n<span class="token function">addRequired</span><span class="token punctuation">(</span>property<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n<span class="token function">removeRequired</span><span class="token punctuation">(</span>property<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n<span class="token function">isRequired</span><span class="token punctuation">(</span>property<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">boolean</span><span class="token punctuation">;</span>\n/**\n * This keyword determines how child instances validate for objects<span class="token punctuation">,</span> and does not directly validate the immediate instance itself.\n * Validation succeeds if<span class="token punctuation">,</span> for each name that appears in both the instance and <span class="token keyword">as</span> a name within this keyword\'s value<span class="token punctuation">,</span>\n * the child instance for that name successfully validates against the corresponding schema.\n * Omitting this keyword has the same behavior <span class="token keyword">as</span> an empty object.\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.18\n */\n<span class="token function">properties</span><span class="token punctuation">(</span>properties<span class="token punctuation">:</span> JsonSchema | <span class="token punctuation">{</span>\n    <span class="token punctuation">[</span>key<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <a href="/api/schema/domain/JsonSchemaObject.html"><span class="token">JsonSchemaObject</span></a><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n<span class="token function">addProperties</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">,</span> schema<span class="token punctuation">:</span> <a href="/api/schema/domain/JsonSchemaObject.html"><span class="token">JsonSchemaObject</span></a> | JsonSchema<span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * This attribute is an object that defines the schema for a set of property names of an object instance.\n * The name of each property of this attribute\'s object is a regular expression pattern in the ECMA 262<span class="token punctuation">,</span> while the value is a schema.\n * If the pattern matches the name of a property on the instance object<span class="token punctuation">,</span> the value of the instance\'s property\n * MUST be valid against the pattern name\'s schema value.\n * Omitting this keyword has the same behavior <span class="token keyword">as</span> an empty object.\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.19\n */\n<span class="token function">patternProperties</span><span class="token punctuation">(</span>patternProperties<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">[</span>p<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <a href="/api/schema/domain/JsonSchemaObject.html"><span class="token">JsonSchemaObject</span></a> | JsonSchema<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * This attribute defines a schema for all properties that are not explicitly defined in an object type definition.\n * If specified<span class="token punctuation">,</span> the value MUST be a schema or a <span class="token keyword">boolean</span>.\n * If false is provided<span class="token punctuation">,</span> no additional properties are allowed beyond the properties defined in the schema.\n * The default value is an empty schema which allows <span class="token keyword">any</span> value for additional properties.\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.20\n */\n<span class="token function">additionalProperties</span><span class="token punctuation">(</span>additionalProperties<span class="token punctuation">:</span> <span class="token keyword">boolean</span> | <a href="/api/schema/domain/JsonSchemaObject.html"><span class="token">JsonSchemaObject</span></a> | JsonSchema<span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * This keyword specifies rules that are evaluated if the instance is an object and contains a certain property.\n * Each property specifies a dependency.\n * If the dependency value is an array<span class="token punctuation">,</span> each element in the array must be unique.\n * Omitting this keyword has the same behavior <span class="token keyword">as</span> an empty object.\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.21\n */\n<span class="token function">dependencies</span><span class="token punctuation">(</span>dependencies<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">[</span>p<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">]</span><span class="token punctuation">:</span> JSONSchema6Definition | JsonSchema | <span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * Takes a schema which validates the names of all properties rather than their values.\n * Note the property name that the schema is testing will always be a <span class="token keyword">string</span>.\n * Omitting this keyword has the same behavior <span class="token keyword">as</span> an empty schema.\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.22\n */\n<span class="token function">propertyNames</span><span class="token punctuation">(</span>propertyNames<span class="token punctuation">:</span> JSONSchema6Definition | JsonSchema<span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * This provides an enumeration of all possible values that are valid\n * for the instance property. This MUST be an array<span class="token punctuation">,</span> and each item in\n * the array represents a possible value for the instance value. If\n * this attribute is defined<span class="token punctuation">,</span> the instance value MUST be one of the\n * values in the array in order for the schema to be valid.\n *\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.23\n */\n<span class="token keyword">enum</span><span class="token punctuation">(</span>enumValues<span class="token punctuation">:</span> JSONSchema6Type<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-7.1\n */\n<span class="token function">definitions</span><span class="token punctuation">(</span>definitions<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">[</span>p<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <a href="/api/schema/domain/JsonSchemaObject.html"><span class="token">JsonSchemaObject</span></a> | JsonSchema<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.26\n */\n<span class="token function">allOf</span><span class="token punctuation">(</span>allOf<span class="token punctuation">:</span> <span class="token punctuation">(</span><a href="/api/schema/domain/JsonSchemaObject.html"><span class="token">JsonSchemaObject</span></a> | JsonSchema<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.27\n */\n<span class="token function">anyOf</span><span class="token punctuation">(</span>anyOf<span class="token punctuation">:</span> <span class="token punctuation">(</span><a href="/api/schema/domain/JsonSchemaObject.html"><span class="token">JsonSchemaObject</span></a> | JsonSchema<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.28\n */\n<span class="token function">oneOf</span><span class="token punctuation">(</span>oneOf<span class="token punctuation">:</span> <span class="token punctuation">(</span><a href="/api/schema/domain/JsonSchemaObject.html"><span class="token">JsonSchemaObject</span></a> | JsonSchema<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.29\n */\n<span class="token function">not</span><span class="token punctuation">(</span>not<span class="token punctuation">:</span> <a href="/api/schema/domain/JsonSchemaObject.html"><span class="token">JsonSchemaObject</span></a> | JsonSchema<span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * Must be strictly greater than 0.\n * A numeric instance is valid only if division by this keyword\'s value results in an integer.\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.1\n */\n<span class="token function">multipleOf</span><span class="token punctuation">(</span>multipleOf<span class="token punctuation">:</span> <span class="token keyword">number</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * Representing an inclusive upper limit for a numeric instance.\n * This keyword validates only if the instance is less than or exactly equal to "maximum".\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.2\n */\n<span class="token function">maximum</span><span class="token punctuation">(</span>maximum<span class="token punctuation">:</span> <span class="token keyword">number</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * Representing an exclusive upper limit for a numeric instance.\n * This keyword validates only if the instance is strictly less than <span class="token punctuation">(</span>not equal to<span class="token punctuation">)</span> to "exclusiveMaximum".\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.3\n */\n<span class="token function">exclusiveMaximum</span><span class="token punctuation">(</span>exclusiveMaximum<span class="token punctuation">:</span> <span class="token keyword">number</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * Representing an inclusive lower limit for a numeric instance.\n * This keyword validates only if the instance is greater than or exactly equal to "minimum".\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.4\n */\n<span class="token function">minimum</span><span class="token punctuation">(</span>minimum<span class="token punctuation">:</span> <span class="token keyword">number</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * Representing an exclusive lower limit for a numeric instance.\n * This keyword validates only if the instance is strictly greater than <span class="token punctuation">(</span>not equal to<span class="token punctuation">)</span> to "exclusiveMinimum".\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.5\n */\n<span class="token function">exclusiveMinimum</span><span class="token punctuation">(</span>exclusiveMinimum<span class="token punctuation">:</span> <span class="token keyword">number</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * Must be a non-negative integer.\n * A <span class="token keyword">string</span> instance is valid against this keyword if its length is less than<span class="token punctuation">,</span> or equal to<span class="token punctuation">,</span> the value of this keyword.\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.6\n */\n<span class="token function">maxLength</span><span class="token punctuation">(</span>maxLength<span class="token punctuation">:</span> <span class="token keyword">number</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * Must be a non-negative integer.\n * A <span class="token keyword">string</span> instance is valid against this keyword if its length is greater than<span class="token punctuation">,</span> or equal to<span class="token punctuation">,</span> the value of this keyword.\n * Omitting this keyword has the same behavior <span class="token keyword">as</span> a value of 0.\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.7\n */\n<span class="token function">minLength</span><span class="token punctuation">(</span>minLength<span class="token punctuation">:</span> <span class="token keyword">number</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * Should be a valid regular expression<span class="token punctuation">,</span> according to the ECMA 262 regular expression dialect.\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.8\n */\n<span class="token function">pattern</span><span class="token punctuation">(</span>pattern<span class="token punctuation">:</span> <span class="token keyword">string</span> | RegExp<span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-8\n */\n<span class="token function">format</span><span class="token punctuation">(</span>format<span class="token punctuation">:</span> <a href="/api/schema/domain/JsonFormatTypes.html"><span class="token">JsonFormatTypes</span></a> | <a href="/api/core/interfaces/ValueOf.html"><span class="token">ValueOf</span></a>&lt;<a href="/api/schema/domain/JsonFormatTypes.html"><span class="token">JsonFormatTypes</span></a>&gt;<span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * A single type<span class="token punctuation">,</span> or a union of simple types\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.25\n */\n<span class="token function">type</span><span class="token punctuation">(</span>type<span class="token punctuation">:</span> <span class="token keyword">any</span> | JSONSchema6TypeName | JSONSchema6TypeName<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n<span class="token function">addTypes</span><span class="token punctuation">(</span>...types<span class="token punctuation">:</span> <span class="token keyword">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n<span class="token keyword">any</span><span class="token punctuation">(</span>...types<span class="token punctuation">:</span> <span class="token keyword">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n<span class="token function">integer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * This attribute is a <span class="token keyword">string</span> that provides a short description of the instance property.\n *\n * @see https<span class="token punctuation">:</span>//tools.ietf.org/html/draft-wright-json-schema-validation-01#section-7.2\n */\n<span class="token function">title</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n<span class="token function">toObject</span><span class="token punctuation">(</span>options?<span class="token punctuation">:</span> <a href="/api/schema/interfaces/JsonSchemaOptions.html"><span class="token">JsonSchemaOptions</span></a><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">any</span><span class="token punctuation">;</span>\n<span class="token function">toJSON</span><span class="token punctuation">(</span>options?<span class="token punctuation">:</span> <a href="/api/schema/interfaces/JsonSchemaOptions.html"><span class="token">JsonSchemaOptions</span></a><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">any</span><span class="token punctuation">;</span>\n<span class="token function">assign</span><span class="token punctuation">(</span>obj?<span class="token punctuation">:</span> JsonSchema | Partial&lt;<a href="/api/schema/domain/JsonSchemaObject.html"><span class="token">JsonSchemaObject</span></a>&gt;<span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n<span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token keyword">any</span><span class="token punctuation">)</span><span class="token punctuation">:</span> this<span class="token punctuation">;</span>\n/**\n * Return the itemSchema computed type.\n * If the type is a function used for recursive model<span class="token punctuation">,</span>\n * the function will be called to get the right type.\n */\n<span class="token function">getComputedType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">any</span><span class="token punctuation">;</span>\n/**\n * Return the Json type <span class="token keyword">as</span> <span class="token keyword">string</span>\n */\n<span class="token function">getJsonType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">;</span>\n/**\n * <a href="/api/common/mvc/decorators/method/Get.html"><span class="token">Get</span></a> the symbolic name of the entity\n */\n<span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">any</span><span class="token punctuation">;</span>\n')])])]),t("p",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")])])])])]),t("p"),s._v(" "),t("h2",{attrs:{id:"members"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#members"}},[s._v("#")]),s._v(" Members")]),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("readonly")]),s._v(" $hooks"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("a",{pre:!0,attrs:{href:"/api/core/class/Hooks.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("Hooks")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("readonly")]),s._v(" $required"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Set<"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")]),s._v(">"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[s._v("get "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("alias")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" AliasMap"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[s._v("get "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nestedGenerics")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("any")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[s._v("set "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nestedGenerics")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("any")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[s._v("get "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("genericLabels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[s._v("set "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("genericLabels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[s._v("get "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("isClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[s._v("get "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("isCollection")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v("Current schema is a collection")])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[s._v("get "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("isGeneric")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v("Current schema is a generic")])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[s._v("get "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hasGenerics")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v("Current schema has generics items")])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[s._v("get "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("genericType")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[s._v("get "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("any")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj?"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Partial<"),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonSchemaObject.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchemaObject")])]),s._v(">"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonSchema.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchema")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("itemSchema")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj?"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonSchemaObject.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchemaObject")])]),s._v(" | "),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonSchema.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchema")])]),s._v(" | "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("any")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonSchema.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchema")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getAliasOf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("property"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" AliasType"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")]),s._v(" | "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("number")]),s._v(" | symbol | undefined"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("addAlias")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("property"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" AliasType"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" alias"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" AliasType"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeAlias")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("property"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" AliasType"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[s._v("$"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("$id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[s._v("$"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ref")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("$ref"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[s._v("$"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("schema")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("$schema"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" JSONSchema6Version"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ignore")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cb"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" | "),t("a",{pre:!0,attrs:{href:"/api/schema/interfaces/IgnoreCallback.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("IgnoreCallback")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("default")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" JSONSchema6Type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v("This keyword can be used to supply a default JSON value associated with a particular schema.\nIt is RECOMMENDED that a default value be valid against the associated schema.")])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" JSONSchema6Type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v('More readible form of a one-element "enum"')])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("description")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("description"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v("This attribute is a string that provides a full description of the of purpose the instance property.")])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("additionalItems")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("additionalItems"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" | "),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonSchemaObject.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchemaObject")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v('This keyword determines how child instances validate for arrays, and does not directly validate the immediate instance itself.\nIf "items" is an array of schemas, validation succeeds if every instance element\nat a position greater than the size of "items" validates against "additionalItems".\nOtherwise, "additionalItems" MUST be ignored, as the "items" schema\n(possibly the default value of an empty schema) is applied to all elements.\nOmitting this keyword has the same behavior as an empty schema.')])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("contains")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("contains"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" JSONSchema6Definition"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v('An array instance is valid against "contains" if at least one of its elements is valid against the given schema.')])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("examples")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("examples"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" JSONSchema6Type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v('Array of examples with no validation effect the value of "default" is usable as an example without repeating it under this keyword')])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("items")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("items"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonSchema.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchema")])]),s._v(" | "),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonSchemaObject.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchemaObject")])]),s._v(" | "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonSchemaObject.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchemaObject")])]),s._v(" | "),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonSchema.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchema")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v("This keyword determines how child instances validate for arrays, and does not directly validate the immediate instance itself.\nOmitting this keyword has the same behavior as an empty schema.")])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("maxItems")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("maxItems"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v('Must be a non-negative integer.\nAn array instance is valid against "maxItems" if its size is less than, or equal to, the value of this keyword.')])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("minItems")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("minItems"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v('Must be a non-negative integer.\nAn array instance is valid against "maxItems" if its size is greater than, or equal to, the value of this keyword.\nOmitting this keyword has the same behavior as a value of 0.')])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("uniqueItems")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("uniqueItems"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v("If this keyword has boolean value false, the instance validates successfully.\nIf it has boolean value true, the instance validates successfully if all of its elements are unique.\nOmitting this keyword has the same behavior as a value of false.")])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("maxProperties")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("maxProperties"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v('Must be a non-negative integer.\nAn object instance is valid against "maxProperties" if its number of properties is less than, or equal to, the value of this keyword.')])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("minProperties")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("minProperties"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v('Must be a non-negative integer.\nAn object instance is valid against "maxProperties" if its number of properties is greater than,\nor equal to, the value of this keyword.\nOmitting this keyword has the same behavior as a value of 0.')])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("required")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("required"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v("Elements of this array must be unique.\nAn object instance is valid against this keyword if every item in the array is the name of a property in the instance.\nOmitting this keyword has the same behavior as an empty array.")])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("addRequired")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("property"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("removeRequired")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("property"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("isRequired")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("property"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("properties")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("properties"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonSchema.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchema")])]),s._v(" | "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonSchemaObject.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchemaObject")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v("This keyword determines how child instances validate for objects, and does not directly validate the immediate instance itself.\nValidation succeeds if, for each name that appears in both the instance and as a name within this keyword's value,\nthe child instance for that name successfully validates against the corresponding schema.\nOmitting this keyword has the same behavior as an empty object.")])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("addProperties")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" schema"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonSchemaObject.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchemaObject")])]),s._v(" | "),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonSchema.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchema")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("patternProperties")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("patternProperties"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonSchemaObject.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchemaObject")])]),s._v(" | "),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonSchema.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchema")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v("This attribute is an object that defines the schema for a set of property names of an object instance.\nThe name of each property of this attribute's object is a regular expression pattern in the ECMA 262, while the value is a schema.\nIf the pattern matches the name of a property on the instance object, the value of the instance's property\nMUST be valid against the pattern name's schema value.\nOmitting this keyword has the same behavior as an empty object.")])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("additionalProperties")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("additionalProperties"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" | "),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonSchemaObject.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchemaObject")])]),s._v(" | "),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonSchema.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchema")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v("This attribute defines a schema for all properties that are not explicitly defined in an object type definition.\nIf specified, the value MUST be a schema or a boolean.\nIf false is provided, no additional properties are allowed beyond the properties defined in the schema.\nThe default value is an empty schema which allows any value for additional properties.")])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dependencies")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dependencies"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" JSONSchema6Definition | "),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonSchema.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchema")])]),s._v(" | "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v("This keyword specifies rules that are evaluated if the instance is an object and contains a certain property.\nEach property specifies a dependency.\nIf the dependency value is an array, each element in the array must be unique.\nOmitting this keyword has the same behavior as an empty object.")])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("propertyNames")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("propertyNames"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" JSONSchema6Definition | "),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonSchema.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchema")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v("Takes a schema which validates the names of all properties rather than their values.\nNote the property name that the schema is testing will always be a string.\nOmitting this keyword has the same behavior as an empty schema.")])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("enumValues"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" JSONSchema6Type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v("This provides an enumeration of all possible values that are valid\nfor the instance property. This MUST be an array, and each item in\nthe array represents a possible value for the instance value. If\nthis attribute is defined, the instance value MUST be one of the\nvalues in the array in order for the schema to be valid.")])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("definitions")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("definitions"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonSchemaObject.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchemaObject")])]),s._v(" | "),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonSchema.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchema")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("allOf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("allOf"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonSchemaObject.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchemaObject")])]),s._v(" | "),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonSchema.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchema")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("anyOf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("anyOf"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonSchemaObject.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchemaObject")])]),s._v(" | "),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonSchema.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchema")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("oneOf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oneOf"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonSchemaObject.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchemaObject")])]),s._v(" | "),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonSchema.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchema")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("not")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("not"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonSchemaObject.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchemaObject")])]),s._v(" | "),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonSchema.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchema")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("multipleOf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("multipleOf"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v("Must be strictly greater than 0.\nA numeric instance is valid only if division by this keyword's value results in an integer.")])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("maximum")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("maximum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v('Representing an inclusive upper limit for a numeric instance.\nThis keyword validates only if the instance is less than or exactly equal to "maximum".')])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("exclusiveMaximum")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("exclusiveMaximum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v('Representing an exclusive upper limit for a numeric instance.\nThis keyword validates only if the instance is strictly less than (not equal to) to "exclusiveMaximum".')])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("minimum")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("minimum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v('Representing an inclusive lower limit for a numeric instance.\nThis keyword validates only if the instance is greater than or exactly equal to "minimum".')])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("exclusiveMinimum")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("exclusiveMinimum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v('Representing an exclusive lower limit for a numeric instance.\nThis keyword validates only if the instance is strictly greater than (not equal to) to "exclusiveMinimum".')])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("maxLength")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("maxLength"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v("Must be a non-negative integer.\nA string instance is valid against this keyword if its length is less than, or equal to, the value of this keyword.")])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("minLength")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("minLength"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("number")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v("Must be a non-negative integer.\nA string instance is valid against this keyword if its length is greater than, or equal to, the value of this keyword.\nOmitting this keyword has the same behavior as a value of 0.")])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("pattern")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("pattern"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")]),s._v(" | RegExp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v("Should be a valid regular expression, according to the ECMA 262 regular expression dialect.")])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("format"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonFormatTypes.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonFormatTypes")])]),s._v(" | "),t("a",{pre:!0,attrs:{href:"/api/core/interfaces/ValueOf.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("ValueOf")])]),s._v("<"),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonFormatTypes.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonFormatTypes")])]),s._v(">"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("any")]),s._v(" | JSONSchema6TypeName | JSONSchema6TypeName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v("A single type, or a union of simple types")])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("addTypes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("...types"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("any")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("any")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("...types"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("any")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("title")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("title"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v("This attribute is a string that provides a short description of the instance property.")])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("toObject")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("options?"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("a",{pre:!0,attrs:{href:"/api/schema/interfaces/JsonSchemaOptions.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchemaOptions")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("any")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("toJSON")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("options?"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("a",{pre:!0,attrs:{href:"/api/schema/interfaces/JsonSchemaOptions.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchemaOptions")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("any")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("assign")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj?"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonSchema.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchema")])]),s._v(" | Partial<"),t("a",{pre:!0,attrs:{href:"/api/schema/domain/JsonSchemaObject.html"}},[t("span",{pre:!0,attrs:{class:"token"}},[s._v("JsonSchemaObject")])]),s._v(">"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("any")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" this"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getComputedType")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("any")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v("Return the itemSchema computed type.\nIf the type is a function used for recursive model,\nthe function will be called to get the right type.")])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getJsonType")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v("Return the Json type as string")])]),t("hr"),s._v(" "),t("div",{pre:!0},[t("div",{pre:!0,attrs:{class:"method-overview"}},[t("div",{pre:!0,attrs:{class:"language-typescript"}},[t("pre",{pre:!0,attrs:{class:"language-typescript","v-pre":""}},[t("code",{pre:!0,attrs:{class:"typescript-lang "}},[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("any")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")])])])])]),s._v(" "),t("p",[s._v("Get the symbolic name of the entity")])])])}),[],!1,null,null,null);a.default=e.exports}}]);